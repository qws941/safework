# SafeWork Portainer 설정 파일
# Portainer API를 통한 고급 컨테이너 관리 설정

# 기본 Portainer 연결 설정
portainer:
  url: "https://portainer.jclee.me"
  api_key: "ptr_lejbr5d8IuYiEQCNpg2VdjFLZqRIEfQiJ7t0adnYQi8="
  endpoint_id: 3
  timeout: 30
  retry_count: 3

# SafeWork 컨테이너 정의
containers:
  safework-app:
    image: "registry.jclee.me/safework/app:latest"
    ports:
      - "4545:4545"
    environment:
      - "TZ=Asia/Seoul"
      - "DB_HOST=safework-postgres"
      - "DB_NAME=safework_db"
      - "DB_USER=safework"
      - "REDIS_HOST=safework-redis"
    network: "safework_network"
    restart_policy: "unless-stopped"
    health_check:
      endpoint: "/health"
      expected_status: 200
      timeout: 10
    labels:
      - "safework.deployment.auto=true"
      - "com.safework.service=app"
      - "com.safework.environment=production"

  safework-postgres:
    image: "registry.jclee.me/safework/postgres:latest"
    ports:
      - "4546:5432"
    environment:
      - "TZ=Asia/Seoul"
      - "POSTGRES_DB=safework_db"
      - "POSTGRES_USER=safework"
    network: "safework_network"
    restart_policy: "unless-stopped"
    volumes:
      - "safework_postgres_data:/var/lib/postgresql/data"
    health_check:
      command: "pg_isready -U safework -d safework_db"
      interval: 30
      timeout: 10
      retries: 3
    labels:
      - "safework.deployment.auto=true"
      - "com.safework.service=database"
      - "com.safework.environment=production"

  safework-redis:
    image: "registry.jclee.me/safework/redis:latest"
    ports:
      - "4547:6379"
    environment:
      - "TZ=Asia/Seoul"
    network: "safework_network"
    restart_policy: "unless-stopped"
    volumes:
      - "safework_redis_data:/data"
    health_check:
      command: "redis-cli ping"
      interval: 30
      timeout: 5
      retries: 3
    labels:
      - "safework.deployment.auto=true"
      - "com.safework.service=cache"
      - "com.safework.environment=production"

# 네트워크 설정
networks:
  safework_network:
    driver: bridge
    external: true

# 볼륨 설정
volumes:
  safework_postgres_data:
    driver: local
  safework_redis_data:
    driver: local

# 모니터링 설정
monitoring:
  # 건강 상태 체크 간격 (초)
  health_check_interval: 60

  # 리소스 사용률 임계값
  thresholds:
    cpu_percent: 80
    memory_percent: 85
    disk_percent: 90

  # 로그 보관 설정
  log_retention:
    max_size: "100m"
    max_files: 3

  # 알림 설정
  alerts:
    enabled: true
    slack_webhook: "${SLACK_WEBHOOK_URL}"
    email_enabled: false

# 백업 설정
backup:
  enabled: true
  schedule: "0 2 * * *"  # 매일 오전 2시
  retention_days: 7
  destinations:
    - type: "local"
      path: "/backup/safework"
    - type: "s3"
      bucket: "safework-backups"
      region: "ap-northeast-2"

# 보안 설정
security:
  # 접근 제어
  allow_privileged: false
  read_only_root_filesystem: false

  # 네트워크 보안
  network_isolation: true
  inter_container_communication: true

  # 리소스 제한
  resource_limits:
    safework-app:
      cpu: "1.0"
      memory: "1g"
    safework-postgres:
      cpu: "2.0"
      memory: "2g"
    safework-redis:
      cpu: "0.5"
      memory: "512m"

# 환경별 설정
environments:
  development:
    containers:
      safework-app:
        environment:
          - "FLASK_ENV=development"
          - "WTF_CSRF_ENABLED=false"
      safework-postgres:
        environment:
          - "POSTGRES_PASSWORD=safework2024"

  production:
    containers:
      safework-app:
        environment:
          - "FLASK_ENV=production"
          - "WTF_CSRF_ENABLED=false"
      safework-postgres:
        environment:
          - "POSTGRES_PASSWORD=${POSTGRES_PASSWORD}"

# 자동화 스크립트 설정
automation:
  # 자동 업데이트 설정
  auto_update:
    enabled: true
    schedule: "0 3 * * 0"  # 매주 일요일 오전 3시
    notification: true

  # 자동 백업
  auto_backup:
    enabled: true
    before_update: true
    verification: true

  # 롤백 설정
  rollback:
    enabled: true
    auto_rollback_on_failure: true
    health_check_timeout: 300

# 통합 로깅 설정
logging:
  driver: "json-file"
  options:
    max-size: "100m"
    max-file: "3"

  # 중앙 집중식 로깅
  centralized:
    enabled: false
    endpoint: "https://logs.safework.jclee.me"

  # 로그 필터링
  filters:
    - level: "ERROR"
      action: "alert"
    - level: "WARNING"
      action: "log"
    - pattern: "health"
      action: "ignore"