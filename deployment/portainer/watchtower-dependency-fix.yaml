# SafeWork Watchtower 의존성 최적화 설정
# Watchtower 이미지 업데이트 시 의존성 문제 해결

version: "3.8"

services:
  # 1. Redis - 최우선 업데이트 (의존성 없음)
  safework-redis:
    image: registry.jclee.me/safework/redis:latest
    container_name: safework-redis
    restart: unless-stopped
    networks:
      - watchtower_default
    environment:
      - TZ=Asia/Seoul
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 30s
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
      - "com.centurylinklabs.watchtower.priority=1"  # 최우선 업데이트
      - "com.centurylinklabs.watchtower.stop-timeout=30s"

  # 2. PostgreSQL - 두번째 업데이트 (Redis 이후)
  safework-postgres:
    image: registry.jclee.me/safework/postgres:latest
    container_name: safework-postgres
    restart: unless-stopped
    networks:
      - watchtower_default
    environment:
      - TZ=Asia/Seoul
      - POSTGRES_DB=safework_db
      - POSTGRES_USER=safework
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - safework-postgres-data-persistent:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U safework -d safework_db"]
      interval: 15s
      timeout: 10s
      retries: 10
      start_period: 60s
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
      - "com.centurylinklabs.watchtower.priority=2"  # 두번째 업데이트
      - "com.centurylinklabs.watchtower.stop-timeout=60s"
      - "com.centurylinklabs.watchtower.depends-on=safework-redis"

  # 3. Flask App - 마지막 업데이트 (모든 의존성 이후)
  safework-app:
    image: registry.jclee.me/safework/app:latest
    container_name: safework-app
    restart: unless-stopped
    networks:
      - watchtower_default
    ports:
      - "4545:4545"
    environment:
      - TZ=Asia/Seoul
      - DB_HOST=safework-postgres
      - DB_NAME=safework_db
      - DB_USER=safework
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - REDIS_HOST=safework-redis
      - SECRET_KEY=${SECRET_KEY}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      # 연결 재시도 설정 (Watchtower 업데이트 대응)
      - DB_CONNECTION_RETRIES=60
      - DB_CONNECTION_DELAY=5
      - REDIS_CONNECTION_RETRIES=20
      - REDIS_CONNECTION_DELAY=3
      # 헬스체크 지연 설정
      - HEALTH_CHECK_DELAY=90
    depends_on:
      safework-postgres:
        condition: service_healthy
      safework-redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:4545/health')"]
      interval: 20s
      timeout: 15s
      retries: 10
      start_period: 120s  # Watchtower 업데이트 고려한 긴 시작 시간
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
      - "com.centurylinklabs.watchtower.priority=3"  # 마지막 업데이트
      - "com.centurylinklabs.watchtower.stop-timeout=90s"
      - "com.centurylinklabs.watchtower.depends-on=safework-postgres,safework-redis"

networks:
  watchtower_default:
    external: true

volumes:
  safework-postgres-data-persistent:
    external: true

# Watchtower 최적화 설정
x-watchtower-config:
  # 순차적 업데이트 보장
  rolling_restart: true
  # 의존성 기반 업데이트 순서
  update_order:
    - safework-redis      # 1순위: 캐시 서비스
    - safework-postgres   # 2순위: 데이터베이스 서비스  
    - safework-app        # 3순위: 애플리케이션 서비스
  # 업데이트 간 대기 시간
  restart_delay: 30s
  # 헬스체크 검증 시간
  health_check_timeout: 120s