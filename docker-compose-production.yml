version: '3.8'

services:
  app:
    image: registry.jclee.me/safework/app:latest
    container_name: safework-app
    ports:
      - "4545:4545"
    env_file:
      - .env.production.secure
    environment:
      - TZ=Asia/Seoul
      - FLASK_CONFIG=production
    depends_on:
      - postgres
      - redis
    networks:
      - safework_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4545/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        tag: "[safework-app-log] {{.Name}}"
        labels: "service=safework-app,env=production,component=application,stack=safework"

  postgres:
    image: registry.jclee.me/safework/postgres:latest
    container_name: safework-postgres
    ports:
      - "4546:5432"
    env_file:
      - .env.production.secure
    environment:
      - TZ=Asia/Seoul
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - safework_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U safework -d safework_db"]
      interval: 30s
      timeout: 5s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        tag: "[safework-postgres-log] {{.Name}}"
        labels: "service=safework-postgres,env=production,component=database,stack=safework"

  redis:
    image: registry.jclee.me/safework/redis:latest
    container_name: safework-redis
    ports:
      - "4547:6379"
    environment:
      - TZ=Asia/Seoul
    volumes:
      - redis_data:/data
    networks:
      - safework_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        tag: "[safework-redis-log] {{.Name}}"
        labels: "service=safework-redis,env=production,component=database,stack=safework"

networks:
  safework_network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local