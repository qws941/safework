version: '3.8'

# SafeWork Production Stack
# 운영 환경용 Docker Compose 설정 - 고가용성 및 보안 최적화

networks:
  safework_network:
    driver: bridge
    name: safework_network
    ipam:
      driver: default
      config:
        - subnet: 172.21.0.0/16
  safework_internal:
    driver: bridge
    name: safework_internal
    internal: true

volumes:
  postgres_data:
    name: safework_postgres_data
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/safework/data/postgres
  redis_data:
    name: safework_redis_data
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/safework/data/redis
  app_uploads:
    name: safework_app_uploads
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/safework/data/uploads
  app_logs:
    name: safework_app_logs
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/safework/logs

services:
  safework-postgres:
    image: registry.jclee.me/safework/postgres:latest
    container_name: safework-postgres
    hostname: safework-postgres
    environment:
      - TZ=Asia/Seoul
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME:-safework_db}
      - POSTGRES_USER=${DB_USER:-safework}
      - POSTGRES_INITDB_ARGS=--encoding=UTF8 --locale=C
      - PGDATA=/var/lib/postgresql/data/pgdata
      
      # 운영 환경 PostgreSQL 최적화
      - POSTGRES_SHARED_BUFFERS=256MB
      - POSTGRES_EFFECTIVE_CACHE_SIZE=1GB
      - POSTGRES_MAINTENANCE_WORK_MEM=64MB
      - POSTGRES_CHECKPOINT_COMPLETION_TARGET=0.9
      - POSTGRES_WAL_BUFFERS=16MB
      - POSTGRES_DEFAULT_STATISTICS_TARGET=100
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - ./postgres/postgresql.conf:/var/lib/postgresql/data/postgresql.conf:ro
    networks:
      - safework_internal
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-safework} -d ${DB_NAME:-safework_db}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
      restart_policy:
        condition: on-failure
        max_attempts: 3
        delay: 10s
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"
    security_opt:
      - no-new-privileges:true
    read_only: false
    tmpfs:
      - /tmp
      - /var/run/postgresql

  safework-redis:
    image: registry.jclee.me/safework/redis:latest
    container_name: safework-redis
    hostname: safework-redis
    environment:
      - TZ=Asia/Seoul
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
    volumes:
      - redis_data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
    networks:
      - safework_internal
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "--no-auth-warning", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'
        reservations:
          memory: 128M
          cpus: '0.25'
      restart_policy:
        condition: on-failure
        max_attempts: 3
        delay: 5s
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp

  safework-app:
    image: registry.jclee.me/safework/app:latest
    container_name: safework-app
    hostname: safework-app
    environment:
      - TZ=Asia/Seoul
      - FLASK_CONFIG=${FLASK_CONFIG:-production}
      - DEBUG=${DEBUG:-false}
      
      # Database Configuration
      - DB_HOST=safework-postgres
      - DB_PORT=5432
      - DB_NAME=${DB_NAME:-safework_db}
      - DB_USER=${DB_USER:-safework}
      - DB_PASSWORD=${DB_PASSWORD}
      
      # Database Pool Settings
      - DB_POOL_SIZE=${DB_POOL_SIZE:-10}
      - DB_POOL_TIMEOUT=${DB_POOL_TIMEOUT:-30}
      - DB_POOL_RECYCLE=${DB_POOL_RECYCLE:-3600}
      - DB_POOL_PRE_PING=${DB_POOL_PRE_PING:-true}
      
      # Redis Configuration
      - REDIS_HOST=safework-redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
      - REDIS_DB=0
      
      # Application Security
      - SECRET_KEY=${SECRET_KEY}
      - ADMIN_USERNAME=${ADMIN_USERNAME:-admin}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      
      # Flask Settings
      - WTF_CSRF_ENABLED=${WTF_CSRF_ENABLED:-false}
      - UPLOAD_FOLDER=/app/uploads
      - MAX_CONTENT_LENGTH=52428800  # 50MB
      
      # Security Headers
      - FORCE_HTTPS=${FORCE_HTTPS:-true}
      - SESSION_COOKIE_SECURE=${SESSION_COOKIE_SECURE:-true}
      - SESSION_COOKIE_HTTPONLY=${SESSION_COOKIE_HTTPONLY:-true}
      - SESSION_COOKIE_SAMESITE=${SESSION_COOKIE_SAMESITE:-Lax}
      
      # Performance Settings
      - GUNICORN_WORKERS=${GUNICORN_WORKERS:-4}
      - GUNICORN_THREADS=${GUNICORN_THREADS:-2}
      - GUNICORN_TIMEOUT=${GUNICORN_TIMEOUT:-120}
      - GUNICORN_KEEPALIVE=${GUNICORN_KEEPALIVE:-2}
      
      # Logging
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - LOG_FILE=/app/logs/app.log
      - ACCESS_LOG_FILE=/app/logs/access.log
      - ERROR_LOG_FILE=/app/logs/error.log
      
      # Monitoring
      - HEALTH_CHECK_ENABLED=true
      - METRICS_ENABLED=${METRICS_ENABLED:-true}
      
      # Slack Integration
      - SLACK_BOT_TOKEN=${SLACK_BOT_TOKEN:-}
      - SLACK_WEBHOOK_URL=${SLACK_WEBHOOK_URL:-}
    volumes:
      - app_uploads:/app/uploads
      - app_logs:/app/logs
    networks:
      - safework_network
      - safework_internal
    ports:
      - "${APP_PORT:-4545}:4545"
    restart: unless-stopped
    depends_on:
      safework-postgres:
        condition: service_healthy
      safework-redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4545/health"]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 120s
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '2.0'
        reservations:
          memory: 1G
          cpus: '1.0'
      restart_policy:
        condition: on-failure
        max_attempts: 3
        delay: 30s
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "10"
    security_opt:
      - no-new-privileges:true
    read_only: false
    tmpfs:
      - /tmp

  # 운영 환경 리버스 프록시 (선택사항)
  safework-nginx:
    image: nginx:alpine
    container_name: safework-nginx
    hostname: safework-nginx
    environment:
      - TZ=Asia/Seoul
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./nginx/logs:/var/log/nginx
    networks:
      - safework_network
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - safework-app
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.5'
        reservations:
          memory: 64M
          cpus: '0.25'
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"
    security_opt:
      - no-new-privileges:true
    profiles:
      - proxy

  # 운영 환경 모니터링 (선택사항)
  safework-monitoring:
    image: prom/node-exporter:latest
    container_name: safework-monitoring
    hostname: safework-monitoring
    environment:
      - TZ=Asia/Seoul
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    networks:
      - safework_internal
    ports:
      - "9100:9100"
    restart: unless-stopped
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.25'
        reservations:
          memory: 64M
          cpus: '0.1'
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "3"
    security_opt:
      - no-new-privileges:true
    read_only: true
    profiles:
      - monitoring