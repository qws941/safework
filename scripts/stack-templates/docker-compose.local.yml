version: '3.8'

# SafeWork Local Development Stack
# 로컬 개발 환경용 Docker Compose 설정
# 서비스 URL: safework-dev.jclee.me

networks:
  safework_network:
    driver: bridge
    name: safework_network
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16

volumes:
  postgres_data:
    name: safework_postgres_data
    driver: local
  redis_data:
    name: safework_redis_data
    driver: local
  app_uploads:
    name: safework_app_uploads
    driver: local

services:
  safework-postgres:
    image: localhost:5000/safework/postgres:latest
    container_name: safework-postgres
    hostname: safework-postgres
    environment:
      - TZ=Asia/Seoul
      - POSTGRES_PASSWORD=${DB_PASSWORD:-safework2024}
      - POSTGRES_DB=${DB_NAME:-safework_db}
      - POSTGRES_USER=${DB_USER:-safework}
      - POSTGRES_INITDB_ARGS=--encoding=UTF8 --locale=C
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      safework_network:
        ipv4_address: 172.20.0.10
    ports:
      - "5432:5432"  # 로컬 개발용 포트 노출
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-safework} -d ${DB_NAME:-safework_db}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  safework-redis:
    image: localhost:5000/safework/redis:latest
    container_name: safework-redis
    hostname: safework-redis
    environment:
      - TZ=Asia/Seoul
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
    volumes:
      - redis_data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
    networks:
      safework_network:
        ipv4_address: 172.20.0.11
    ports:
      - "6379:6379"  # 로컬 개발용 포트 노출
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.25'
        reservations:
          memory: 64M
          cpus: '0.1'
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  safework-app:
    image: localhost:5000/safework/app:latest
    container_name: safework-app
    hostname: safework-app
    environment:
      - TZ=Asia/Seoul
      - FLASK_CONFIG=${FLASK_CONFIG:-development}
      - DEBUG=${DEBUG:-true}
      
      # Database Configuration
      - DB_HOST=safework-postgres
      - DB_PORT=5432
      - DB_NAME=${DB_NAME:-safework_db}
      - DB_USER=${DB_USER:-safework}
      - DB_PASSWORD=${DB_PASSWORD:-safework2024}
      
      # Redis Configuration
      - REDIS_HOST=safework-redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
      - REDIS_DB=0
      
      # Application Security
      - SECRET_KEY=${SECRET_KEY:-safework-local-secret-key-2024}
      - ADMIN_USERNAME=${ADMIN_USERNAME:-admin}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin123}
      
      # Flask Settings
      - WTF_CSRF_ENABLED=${WTF_CSRF_ENABLED:-false}
      - UPLOAD_FOLDER=/app/uploads
      - MAX_CONTENT_LENGTH=52428800  # 50MB
      
      # Logging
      - LOG_LEVEL=${LOG_LEVEL:-DEBUG}
      - LOG_FILE=/app/logs/app.log
    volumes:
      - app_uploads:/app/uploads
      - ./logs:/app/logs
    networks:
      safework_network:
        ipv4_address: 172.20.0.12
    ports:
      - "${APP_PORT:-4545}:4545"
    restart: unless-stopped
    depends_on:
      safework-postgres:
        condition: service_healthy
      safework-redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4545/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # 로컬 개발용 추가 서비스
  safework-nginx:
    image: nginx:alpine
    container_name: safework-nginx
    hostname: safework-nginx
    environment:
      - TZ=Asia/Seoul
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
    networks:
      safework_network:
        ipv4_address: 172.20.0.13
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - safework-app
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # 개발용 데이터베이스 관리 도구
  safework-adminer:
    image: adminer:latest
    container_name: safework-adminer
    hostname: safework-adminer
    environment:
      - ADMINER_DEFAULT_SERVER=safework-postgres
      - ADMINER_DESIGN=pepa-linha
    networks:
      safework_network:
        ipv4_address: 172.20.0.14
    ports:
      - "8080:8080"
    depends_on:
      - safework-postgres
    restart: unless-stopped
    profiles:
      - dev-tools