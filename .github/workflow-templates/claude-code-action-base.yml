name: ðŸ¤– Claude Code Action Template

# Base template for Claude Code Action workflows
# Copy and customize this template for specific use cases

concurrency:
  group: claude-${{ github.ref }}-${{ github.event_name }}
  cancel-in-progress: true

on:
  workflow_call:
    inputs:
      action_type:
        description: 'Type of Claude action to perform'
        required: false
        default: 'analyze'
        type: string
      target_files:
        description: 'Specific files or directories to analyze'
        required: false
        type: string
      temperature:
        description: 'Claude temperature setting (0.0-1.0)'
        required: false
        default: '0.1'
        type: string
      timeout_minutes:
        description: 'Job timeout in minutes'
        required: false
        default: 30
        type: number

permissions:
  contents: write
  issues: write
  pull-requests: write
  actions: write
  checks: write
  repository-projects: write
  security-events: write
  statuses: write
  deployments: write
  pages: write
  metadata: read

jobs:
  claude-action:
    name: ðŸ¤– Claude Analysis
    runs-on: ubuntu-latest
    timeout-minutes: ${{ inputs.timeout_minutes || 30 }}
    
    steps:
      - name: ðŸ¤– Claude Code Action
        uses: anthropics/claude-code-action@v1
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
          track_progress: true
          prompt: |
            **REPOSITORY CONTEXT:**
            - Repository: ${{ github.repository }}
            - Event: ${{ github.event_name }}
            - Actor: ${{ github.actor }}
            - Branch: ${{ github.ref_name }}
            - Commit: ${{ github.sha }}
            ${{ github.event.pull_request && format('- PR Number: {0}', github.event.pull_request.number) || '' }}
            ${{ github.event.issue && format('- Issue Number: {0}', github.event.issue.number) || '' }}
            
            **ACTION TYPE:** ${{ inputs.action_type || 'analyze' }}
            **TARGET FILES:** ${{ inputs.target_files || 'All repository files' }}
            
            **OUTPUT FORMAT REQUIREMENTS:**
            - Always include specific file paths and line numbers for code references
            - Provide working code examples with complete context
            - Include validation steps and test commands
            - Use GitHub-flavored Markdown with proper syntax highlighting
            - Add clear headings and sections for different aspects
            
            **QUALITY METRICS:**
            - Code changes must be syntactically correct and tested
            - Security recommendations must include specific vulnerability details
            - Performance improvements must include measurable metrics
            - All suggestions must be immediately implementable
            
            **EXPECTED DELIVERABLES:**
            - Root cause analysis with evidence
            - Step-by-step implementation guide
            - Code snippets ready for deployment
            - Validation and testing procedures
            - Follow-up monitoring recommendations
          claude_args: |
            --temperature ${{ inputs.temperature || '0.1' }}
            --allowedTools "mcp__serena__*,mcp__github__*,mcp__sequential-thinking__*,mcp__memory__*,mcp__eslint__*,Read,Write,Edit,Glob,Grep,Bash(git:*),Bash(gh:*)"
            --systemPrompt "Expert software engineer specializing in code analysis, security, and performance optimization. Provides actionable solutions with implementation details."