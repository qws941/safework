name: ðŸ”’ Claude Security Audit Template

# Specialized template for security audits using Claude Code Action

concurrency:
  group: claude-security-${{ github.ref }}
  cancel-in-progress: true

on:
  workflow_call:
    inputs:
      audit_scope:
        description: 'Security audit scope (full, dependencies, code, infrastructure)'
        required: false
        default: 'full'
        type: string
      severity_threshold:
        description: 'Minimum severity to report (low, medium, high, critical)'
        required: false
        default: 'medium'
        type: string

permissions:
  contents: read
  issues: write
  security-events: write
  pull-requests: write

jobs:
  security-audit:
    name: ðŸ”’ Security Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 45
    
    steps:
      - name: ðŸ”’ Claude Security Audit
        uses: anthropics/claude-code-action@v1
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
          track_progress: true
          prompt: |
            **SECURITY AUDIT REQUEST:**
            - Repository: ${{ github.repository }}
            - Audit Scope: ${{ inputs.audit_scope || 'full' }}
            - Severity Threshold: ${{ inputs.severity_threshold || 'medium' }}
            - Branch: ${{ github.ref_name }}
            - Commit: ${{ github.sha }}
            
            **SECURITY ANALYSIS TASKS:**
            1. **Code Security Review:**
               - SQL injection vulnerabilities
               - XSS and CSRF protection
               - Authentication and authorization flaws
               - Input validation and sanitization
               - Secrets and credential management
            
            2. **Dependency Security:**
               - Known vulnerable dependencies
               - Outdated packages with security patches
               - License compatibility issues
               - Supply chain security risks
            
            3. **Infrastructure Security:**
               - Docker container security
               - Network configuration security
               - Environment variable exposure
               - File permission and access controls
            
            4. **Configuration Security:**
               - Database connection security
               - API endpoint protection
               - CORS and security headers
               - Logging and monitoring gaps
            
            **REQUIRED DELIVERABLES:**
            - Vulnerability assessment with CVSS scores
            - Specific code locations with security issues
            - Remediation steps with code examples
            - Security best practices recommendations
            - GitHub Security Advisory creation for critical issues
            
            **SUCCESS CRITERIA:**
            - All security vulnerabilities above threshold identified
            - Actionable remediation provided for each issue
            - Security hardening recommendations included
            - Compliance with security standards validated
          claude_args: |
            --temperature 0.05
            --allowedTools "mcp__serena__*,mcp__github__*,mcp__sequential-thinking__*,mcp__memory__*,mcp__eslint__*,Read,Grep,Glob"
            --systemPrompt "Cybersecurity expert specializing in application security, vulnerability assessment, and secure coding practices. Focus on identifying and remediating security vulnerabilities with specific, actionable solutions."