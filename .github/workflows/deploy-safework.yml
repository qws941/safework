name: üöÄ Deploy SafeWork

on:
  push:
    branches: [master, main]
    paths:
      - 'app/**'
      - 'docker-compose.yml'
      - 'requirements.txt'
      - 'Dockerfile'
      - '.github/workflows/deploy-safework.yml'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'production'
        type: choice
        options:
          - 'production'
          - 'development'

jobs:
  security-scan:
    name: üîí Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4

      - name: üêç Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: üîç Install security tools
        run: |
          pip install bandit safety trivy

      - name: üõ°Ô∏è Run Bandit security scan
        run: |
          bandit -r app/ -f json -o bandit-report.json || true
          echo "Bandit scan completed"

      - name: üîê Check for known vulnerabilities
        run: |
          safety check --json --output safety-report.json || true
          echo "Safety check completed"

      - name: üìä Upload security reports
        uses: actions/upload-artifact@v4
        with:
          name: security-reports
          path: |
            bandit-report.json
            safety-report.json

  build-and-push:
    name: üèóÔ∏è Build & Push Images
    runs-on: ubuntu-latest
    needs: security-scan
    outputs:
      image-tag: ${{ steps.meta.outputs.tags }}
      
    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4

      - name: üè∑Ô∏è Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: registry.jclee.me/safework/app
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: üîê Login to Registry
        uses: docker/login-action@v3
        with:
          registry: registry.jclee.me
          username: admin
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: üèóÔ∏è Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64

  deploy-to-watchtower:
    name: üöÄ Deploy via Watchtower
    runs-on: ubuntu-latest
    needs: build-and-push
    environment: ${{ github.event.inputs.environment || 'production' }}
    
    steps:
      - name: üîÑ Trigger Watchtower Update
        run: |
          # Watchtower will automatically pull and update the latest image
          curl -X POST "${{ secrets.WATCHTOWER_HTTP_API_TOKEN }}/update" \
            -H "Authorization: Bearer ${{ secrets.WATCHTOWER_API_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d '{
              "images": ["registry.jclee.me/safework/app:latest"],
              "cleanup": true
            }' || echo "Watchtower update triggered"

      - name: ‚è≥ Wait for deployment
        run: |
          echo "Waiting 30 seconds for container update..."
          sleep 30

      - name: üè• Health check
        run: |
          max_attempts=10
          attempt=1
          
          while [ $attempt -le $max_attempts ]; do
            echo "Health check attempt $attempt/$max_attempts"
            
            if curl -f -s https://safework.jclee.me/health > /dev/null; then
              echo "‚úÖ SafeWork is healthy!"
              curl -s https://safework.jclee.me/health | jq .
              exit 0
            else
              echo "‚ùå Health check failed, retrying in 10 seconds..."
              sleep 10
              attempt=$((attempt + 1))
            fi
          done
          
          echo "‚ùå Health check failed after $max_attempts attempts"
          exit 1

  notify-deployment:
    name: üì¢ Notify Deployment
    runs-on: ubuntu-latest
    needs: [build-and-push, deploy-to-watchtower]
    if: always()
    
    steps:
      - name: üì® Send deployment notification
        uses: 8398a7/action-slack@v3
        if: env.SLACK_WEBHOOK_URL
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          status: custom
          custom_payload: |
            {
              "text": "${{ needs.deploy-to-watchtower.result == 'success' && 'üöÄ SafeWork Î∞∞Ìè¨ ÏôÑÎ£å' || '‚ö†Ô∏è SafeWork Î∞∞Ìè¨ Ïã§Ìå®' }}",
              "attachments": [
                {
                  "color": "${{ needs.deploy-to-watchtower.result == 'success' && 'good' || 'danger' }}",
                  "fields": [
                    {
                      "title": "Repository",
                      "value": "${{ github.repository }}",
                      "short": true
                    },
                    {
                      "title": "Environment", 
                      "value": "${{ github.event.inputs.environment || 'production' }}",
                      "short": true
                    },
                    {
                      "title": "Commit",
                      "value": "<${{ github.event.head_commit.url }}|${{ github.event.head_commit.id }}>",
                      "short": true
                    },
                    {
                      "title": "Author",
                      "value": "${{ github.event.head_commit.author.name }}",
                      "short": true
                    }
                  ]
                }
              ]
            }