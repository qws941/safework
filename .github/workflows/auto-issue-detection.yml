name: 이슈 자동 감지 및 처리

on:
  push:
    branches: [master, main]
  schedule:
    # 매 30분마다 열린 이슈 확인 및 Claude 자동 할당
    - cron: '*/30 * * * *'  # 30분마다 실행
  workflow_dispatch:

env:
  TZ: Asia/Seoul

jobs:
  # 1단계: 오픈 이슈 자동 감지 및 Claude 할당
  detect-open-issues:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      contents: read
      actions: write
    outputs:
      issues-assigned: ${{ steps.assign.outputs.issues-assigned }}
      issue-count: ${{ steps.assign.outputs.issue-count }}
    
    steps:
      - name: 🔍 열린 이슈 스캔 및 Claude 자동 할당
        id: assign
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            let assignedCount = 0;
            
            console.log('🔍 열린 이슈 검색 중...');
            
            // 열린 이슈 중 Claude가 할당되지 않은 이슈 검색
            const openIssues = await github.rest.issues.listForRepo({
              owner,
              repo,
              state: 'open',
              per_page: 50,
              sort: 'created',
              direction: 'desc'
            });
            
            console.log(`📋 총 ${openIssues.data.length}개의 열린 이슈 발견`);
            
            for (const issue of openIssues.data) {
              // PR은 제외
              if (issue.pull_request) continue;
              
              // 이미 Claude가 댓글을 단 이슈는 제외
              const comments = await github.rest.issues.listComments({
                owner,
                repo,
                issue_number: issue.number
              });
              
              const hasClaudeComment = comments.data.some(comment => 
                comment.user.login === 'claude[bot]' || 
                comment.body.includes('🤖 **Claude 작업 시작!**') ||
                comment.body.includes('@claude')
              );
              
              if (hasClaudeComment) {
                console.log(`⏭️ 이슈 #${issue.number}: 이미 Claude가 처리 중`);
                continue;
              }
              
              // 24시간 이내에 생성된 이슈만 자동 할당
              const issueAge = Date.now() - new Date(issue.created_at).getTime();
              const hoursOld = issueAge / (1000 * 60 * 60);
              
              if (hoursOld > 24) {
                console.log(`⏭️ 이슈 #${issue.number}: 24시간 경과 (${Math.round(hoursOld)}시간)`);
                continue;
              }
              
              // Claude 자동 할당 댓글 추가
              try {
                await github.rest.issues.createComment({
                  owner,
                  repo,
                  issue_number: issue.number,
                  body: `🤖 **Claude 자동 할당**
                  
📋 **자동 감지된 이슈**
- **이슈**: ${issue.title}
- **생성시간**: ${new Date(issue.created_at).toLocaleString('ko-KR', { timeZone: 'Asia/Seoul' })}
- **할당시간**: ${new Date().toLocaleString('ko-KR', { timeZone: 'Asia/Seoul' })}

🎯 **Claude 작업 시작**
@claude 이 이슈를 분석하고 해결해주세요.

SafeWork 프로젝트 패턴을 따라 다음 단계로 진행해주세요:
1. 이슈 내용 정확한 분석
2. 관련 파일 식별 및 현재 상태 확인
3. 적절한 해결방안 구현
4. 테스트 실행 및 검증
5. 커밋 및 이슈 완료

---
_🕒 자동 할당 시스템에 의해 생성됨_`
                });
                
                assignedCount++;
                console.log(`✅ 이슈 #${issue.number} Claude 자동 할당 완료: "${issue.title}"`);
                
                // 너무 많은 요청을 방지하기 위해 잠시 대기
                await new Promise(resolve => setTimeout(resolve, 2000));
                
              } catch (error) {
                console.error(`❌ 이슈 #${issue.number} 할당 실패:`, error.message);
              }
            }
            
            console.log(`🎯 총 ${assignedCount}개 이슈에 Claude 자동 할당 완료`);
            
            // 출력 설정
            core.setOutput('issues-assigned', assignedCount > 0 ? 'true' : 'false');
            core.setOutput('issue-count', assignedCount);

  # 2단계: 결과 알림
  notify-completion:
    needs: detect-open-issues
    if: always()
    runs-on: ubuntu-latest
    
    steps:
      - name: 📊 자동 할당 결과 알림
        run: |
          echo "🎯 열린 이슈 자동 Claude 할당 완료!"
          echo ""
          echo "📋 결과 요약:"
          echo "  - 이슈 할당 여부: ${{ needs.detect-open-issues.outputs.issues-assigned }}"
          echo "  - 할당된 이슈 수: ${{ needs.detect-open-issues.outputs.issue-count }}"
          echo ""
          if [ "${{ needs.detect-open-issues.outputs.issues-assigned }}" = "true" ]; then
            echo "🤖 ${{ needs.detect-open-issues.outputs.issue-count }}개 이슈에 Claude가 자동 할당되었습니다."
            echo "실시간 진행상황은 각 이슈 페이지에서 확인할 수 있습니다."
          else
            echo "✅ 새로 할당할 이슈가 없습니다. 모든 이슈가 처리 중이거나 완료되었습니다."
          fi