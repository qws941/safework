name: 자동 이슈 감지 및 Claude 할당

on:
  schedule:
    - cron: '*/30 * * * *'  # 30분마다 실행
  workflow_dispatch:

env:
  TZ: Asia/Seoul

jobs:
  detect-and-assign:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      contents: read
    
    steps:
      - name: 열린 이슈 자동 Claude 할당
        uses: actions/github-script@v7
        with:
          script: |
            console.log('🔍 열린 이슈 자동 Claude 할당 시작...');
            
            const { owner, repo } = context.repo;
            let assignedCount = 0;
            
            try {
              // 열린 이슈 목록 가져오기
              const { data: issues } = await github.rest.issues.listForRepo({
                owner,
                repo,
                state: 'open',
                per_page: 10,
                sort: 'created',
                direction: 'desc'
              });
              
              console.log(`📋 ${issues.length}개의 열린 이슈 발견`);
              
              for (const issue of issues) {
                // PR 제외
                if (issue.pull_request) continue;
                
                console.log(`🔍 이슈 #${issue.number} 검토: ${issue.title}`);
                
                // 24시간 이내 생성된 이슈만 처리
                const created = new Date(issue.created_at);
                const now = new Date();
                const hoursOld = (now - created) / (1000 * 60 * 60);
                
                if (hoursOld > 24) {
                  console.log(`⏭️ 이슈 #${issue.number}: 24시간 경과`);
                  continue;
                }
                
                // 기존 Claude 댓글 확인
                const { data: comments } = await github.rest.issues.listComments({
                  owner,
                  repo,
                  issue_number: issue.number
                });
                
                const hasClaudeComment = comments.some(comment => 
                  comment.body.includes('@claude') ||
                  comment.body.includes('Claude 작업') ||
                  comment.body.includes('Claude 자동 할당')
                );
                
                if (hasClaudeComment) {
                  console.log(`⏭️ 이슈 #${issue.number}: 이미 Claude 처리 중`);
                  continue;
                }
                
                // Claude 자동 할당
                console.log(`✅ 이슈 #${issue.number} Claude 자동 할당 중...`);
                
                const commentBody = `🤖 **Claude 자동 할당**

📋 **자동 감지된 이슈**
- **이슈**: ${issue.title}
- **생성시간**: ${created.toLocaleString('ko-KR', { timeZone: 'Asia/Seoul' })}
- **할당시간**: ${new Date().toLocaleString('ko-KR', { timeZone: 'Asia/Seoul' })}

🎯 **Claude 작업 시작**
@claude 이 이슈를 분석하고 해결해주세요.

SafeWork 프로젝트 패턴을 따라 다음 단계로 진행해주세요:
1. 이슈 내용 정확한 분석
2. 관련 파일 식별 및 현재 상태 확인
3. 적절한 해결방안 구현
4. 테스트 실행 및 검증
5. 커밋 및 이슈 완료 (엔드포인트 URL 포함)

---
_🕒 자동 할당 시스템에 의해 생성됨_`;
                
                await github.rest.issues.createComment({
                  owner,
                  repo,
                  issue_number: issue.number,
                  body: commentBody
                });
                
                assignedCount++;
                console.log(`✅ 이슈 #${issue.number} Claude 자동 할당 완료`);
                
                // API 제한을 위한 대기
                await new Promise(resolve => setTimeout(resolve, 2000));
              }
              
              console.log(`🎯 총 ${assignedCount}개 이슈에 Claude 자동 할당 완료`);
              
            } catch (error) {
              console.error('❌ 이슈 할당 중 오류 발생:', error);
            }