name: SafeWork 배포 파이프라인

on:
  push:
    branches: [master, main]
  workflow_run:
    workflows: ["Claude Code"]
    types: [completed]
    branches: [master, main]
  workflow_dispatch:

env:
  REGISTRY: registry.jclee.me
  PROJECT_NAME: safework

jobs:
  deploy:
    if: |
      github.event_name == 'push' || 
      github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success')
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - name: 🔍 배포 트리거 확인
        run: |
          echo "🚀 배포 워크플로우 시작!"
          echo "트리거 이벤트: ${{ github.event_name }}"
          if [ "${{ github.event_name }}" = "workflow_run" ]; then
            echo "Claude 워크플로우 결과: ${{ github.event.workflow_run.conclusion }}"
            echo "Claude 워크플로우명: ${{ github.event.workflow_run.name }}"
          fi
          
      - name: 📥 소스코드 체크아웃
        uses: actions/checkout@v4
          
      - name: 🏷️ 버전 생성
        id: version
        run: |
          COMMIT_SHA=$(git rev-parse --short HEAD)
          VERSION="v3.1-${COMMIT_SHA}"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          
      - name: 🛠️ Docker Buildx 설정
        uses: docker/setup-buildx-action@v3

      - name: 🔐 Docker Registry 로그인
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: admin
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: 🚀 SafeWork App 빌드 & 푸시
        uses: docker/build-push-action@v5
        with:
          context: ./app
          push: true
          platforms: linux/amd64
          tags: |
            ${{ env.REGISTRY }}/${{ env.PROJECT_NAME }}/app:${{ steps.version.outputs.version }}
            ${{ env.REGISTRY }}/${{ env.PROJECT_NAME }}/app:latest
          
      - name: 🎉 배포 완료 및 이슈 업데이트
        uses: actions/github-script@v7
        with:
          script: |
            console.log("🎉 SafeWork 배포 완료!");
            console.log("버전: ${{ steps.version.outputs.version }}");
            console.log("레지스트리: ${{ env.REGISTRY }}/${{ env.PROJECT_NAME }}/app");
            
            if (context.eventName === "workflow_run") {
              console.log("✅ Claude 작업 후 자동 배포 성공!");
              
              // 최근 이슈에서 Claude 관련 이슈 찾기
              try {
                const issues = await github.rest.issues.listForRepo({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  state: 'all',
                  sort: 'updated',
                  per_page: 10
                });
                
                const recentClaudeIssue = issues.data.find(issue => 
                  issue.updated_at > new Date(Date.now() - 60 * 60 * 1000).toISOString() && // 1시간 내
                  (issue.body?.includes('@claude') || 
                   issue.comments_url && 
                   issue.title?.includes('Claude') ||
                   issue.labels?.some(label => 
                     (typeof label === 'string' ? label : label.name)?.includes('claude')
                   ))
                );
                
                if (recentClaudeIssue) {
                  await github.rest.issues.createComment({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: recentClaudeIssue.number,
                    body: `🚀 **배포 완료!**
                    
                📋 **최종 완료 상태**  
                - ✅ 이슈 분석 완료
                - ✅ 코드 수정 완료
                - ✅ PR 생성 및 병합 완료
                - ✅ 자동 배포 완료
                - ✅ **운영 환경 반영 완료** 🎉
                
                **🎯 배포 정보:**
                - **버전**: \`${{ steps.version.outputs.version }}\`
                - **레지스트리**: \`${{ env.REGISTRY }}/${{ env.PROJECT_NAME }}/app\`
                - **완료 시간**: ${new Date().toLocaleString('ko-KR')}
                - **배포 상태**: 성공 ✅
                
                **모든 작업이 완료되었습니다!** 변경사항이 운영 환경에 정상 반영되었습니다.
                
                ---
                🤖 *Fully Automated Claude → Deploy Pipeline*`
                  });
                }
              } catch (error) {
                console.log("이슈 업데이트 중 오류:", error.message);
              }
            } else {
              console.log("✅ 수동 푸시 후 배포 성공!");
            }