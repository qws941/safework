name: 🤖 CI Auto-Fix Pipeline

on:
  workflow_run:
    workflows: ["🚀 Deploy Pipeline"]
    types:
      - completed
  workflow_dispatch:
    inputs:
      fix_strategy:
        description: 'Fix strategy to use'
        required: false
        default: 'quick'
        type: choice
        options:
          - quick
          - comprehensive
          - experimental

permissions:
  contents: write
  actions: write
  issues: write
  pull-requests: write
  checks: write
  security-events: write
  statuses: write
  id-token: write
  packages: write
  deployments: write

env:
  CLAUDE_CODE_OAUTH_TOKEN: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  PORTAINER_API_KEY: ${{ secrets.PORTAINER_API_KEY }}
  POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
  REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
  REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}

jobs:
  auto-fix:
    if: github.event.workflow_run.conclusion == 'failure' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    timeout-minutes: 20
    
    steps:
      - name: 🔗 Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
          
      - name: 🧠 Setup Claude Code
        run: |
          curl -fsSL https://claude.ai/install.sh | bash
          echo "$CLAUDE_CODE_OAUTH_TOKEN" | claude auth
          
      - name: 📊 Collect failure context
        id: context
        run: |
          echo "failure_context<<EOF" >> $GITHUB_OUTPUT
          echo "Repository: SafeWork Flask Application" >> $GITHUB_OUTPUT
          echo "Branch: ${{ github.ref_name }}" >> $GITHUB_OUTPUT
          echo "Commit: ${{ github.sha }}" >> $GITHUB_OUTPUT
          echo "Triggered by: ${{ github.event_name }}" >> $GITHUB_OUTPUT
          echo "Fix strategy: ${{ github.event.inputs.fix_strategy || 'quick' }}" >> $GITHUB_OUTPUT
          echo "Architecture: Independent containers (PostgreSQL, Redis, Flask)" >> $GITHUB_OUTPUT
          echo "Services: safework-postgres:4546, safework-redis:4547, safework-app:4545" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          
      - name: 🔍 Intelligent CI Failure Auto-Fix
        uses: anthropics/claude-code-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          anthropic_api_key: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
          track_progress: true
          prompt: |
            🚨 **SafeWork CI/CD 파이프라인 자동 복구**
            
            **실패 컨텍스트:**
            - 전략: ${{ github.event.inputs.fix_strategy || 'quick' }}
            - 브랜치: ${{ github.ref_name }}
            - 커밋: ${{ github.sha }}
            
            **자동 수정 프로토콜:**
            1. 최근 워크플로우 실패 로그 분석
            2. 일반적인 오류 패턴 식별
            3. 안전한 자동 수정 적용
            4. 수정 내용 검증
            5. 새로운 배포 파이프라인 트리거
            
            **주요 수정 대상:**
            - Docker 빌드 오류 (COPY 경로, requirements.txt)
            - PostgreSQL 연결 설정 (호스트명, 포트, 자격증명)
            - GitHub Actions YAML 문법 오류
            - 환경 변수 불일치
            - Python 의존성 충돌
            
            즉시 자동 복구를 시작하고 한국어로 진행 상황을 보고해주세요.
          
      - name: 📈 Report execution metrics
        if: always()
        run: |
          echo "=== 🤖 CI Auto-Fix Execution Report ==="
          echo "Strategy Used: ${{ github.event.inputs.fix_strategy || 'quick' }}"
          echo "Execution Time: ${{ github.run_number }}"
          echo "Repository: SafeWork"
          echo "Status: ${{ job.status }}"
          
          # Create GitHub issue for tracking if needed
          if [ "${{ job.status }}" != "success" ]; then
            gh issue create \
              --title "🚨 CI Auto-Fix Failed - Manual Intervention Required" \
              --body "Auto-fix pipeline failed to resolve CI/CD issues. Manual review needed." \
              --label "claude-actionable,ci-failure,high-priority"
          fi