name: Claude Code - 시스템 모니터링 및 알림

on:
  schedule:
    - cron: '0 */6 * * *'  # 6시간마다 실행
  workflow_dispatch:
  repository_dispatch:
    types: [claude-health-check]

permissions:
  contents: read
  issues: write
  actions: write

jobs:
  system-health-monitoring:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - name: 📥 소스코드 체크아웃
        uses: actions/checkout@v4
        
      - name: 🔍 Claude Code Action 상태 점검
        id: claude-status
        run: |
          echo "claude_active=$(gh run list --workflow='Claude Code - 고도화된 이슈 자동 해결 (MCP 통합)' --limit=5 --json status,conclusion | jq -r '.[] | select(.conclusion == "success") | length')" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: 📊 프로젝트 건강도 분석
        id: health-check
        run: |
          # 최근 이슈 처리 성공률 계산
          SUCCESS_RATE=$(gh run list --limit=20 --json conclusion | jq '[.[] | select(.conclusion == "success")] | length')
          TOTAL_RUNS=$(gh run list --limit=20 --json conclusion | jq '. | length')
          
          if [ $TOTAL_RUNS -gt 0 ]; then
            SUCCESS_PERCENTAGE=$((SUCCESS_RATE * 100 / TOTAL_RUNS))
          else
            SUCCESS_PERCENTAGE=0
          fi
          
          echo "success_rate=$SUCCESS_PERCENTAGE" >> $GITHUB_OUTPUT
          echo "total_runs=$TOTAL_RUNS" >> $GITHUB_OUTPUT
          echo "successful_runs=$SUCCESS_RATE" >> $GITHUB_OUTPUT
          
          # 코드베이스 상태 체크
          PYTHON_FILES=$(find app -name "*.py" | wc -l)
          TEMPLATE_FILES=$(find app -name "*.html" | wc -l) 
          TEST_FILES=$(find app/tests -name "test_*.py" | wc -l)
          
          echo "python_files=$PYTHON_FILES" >> $GITHUB_OUTPUT
          echo "template_files=$TEMPLATE_FILES" >> $GITHUB_OUTPUT
          echo "test_files=$TEST_FILES" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: 🔔 Slack 알림 (성공률 80% 미만시)
        if: steps.health-check.outputs.success_rate < 80 && steps.health-check.outputs.total_runs > 5
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          custom_payload: |
            {
              "text": "⚠️ SafeWork Claude Code 시스템 경고",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn", 
                    "text": "*🚨 Claude Code 성능 저하 감지*\n\n• 성공률: ${{ steps.health-check.outputs.success_rate }}%\n• 총 실행: ${{ steps.health-check.outputs.total_runs }}회\n• 성공: ${{ steps.health-check.outputs.successful_runs }}회\n\n*점검 필요사항:*\n- API 토큰 유효성\n- MCP 서버 연결 상태\n- 워크플로우 설정"
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          
      - name: 📈 시스템 상태 이슈 생성
        if: steps.health-check.outputs.success_rate < 70 && steps.health-check.outputs.total_runs > 10
        run: |
          ISSUE_TITLE="🚨 Claude Code 시스템 성능 저하 알림"
          ISSUE_BODY="## 📊 시스템 상태 보고서

### 🎯 성능 지표
- **성공률**: ${{ steps.health-check.outputs.success_rate }}% (목표: 90% 이상)
- **총 실행**: ${{ steps.health-check.outputs.total_runs }}회
- **성공 실행**: ${{ steps.health-check.outputs.successful_runs }}회

### 📋 코드베이스 현황
- **Python 파일**: ${{ steps.health-check.outputs.python_files }}개
- **템플릿 파일**: ${{ steps.health-check.outputs.template_files }}개  
- **테스트 파일**: ${{ steps.health-check.outputs.test_files }}개

### 🔧 권장 조치사항

1. **API 토큰 확인**
   - \`CLAUDE_CODE_OAUTH_TOKEN\` 유효성 검증
   - 토큰 만료일 확인

2. **MCP 서버 연결 테스트**
   - 각 MCP 서버 응답 시간 확인
   - 네트워크 연결 상태 점검

3. **워크플로우 최적화**
   - 타임아웃 설정 검토
   - 리소스 할당 최적화

### 📞 담당자
@qws941

---
*자동 생성 시각: $(date '+%Y-%m-%d %H:%M:%S KST')*"

          gh issue create --title "$ISSUE_TITLE" --body "$ISSUE_BODY" --label "monitoring,priority-high,claude-system"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: ✅ 시스템 정상 상태 확인
        if: steps.health-check.outputs.success_rate >= 90
        run: |
          echo "🎉 Claude Code 시스템이 정상적으로 작동 중입니다!"
          echo "성공률: ${{ steps.health-check.outputs.success_rate }}%"
          echo "SafeWork 프로젝트의 자동화가 건강하게 유지되고 있습니다."