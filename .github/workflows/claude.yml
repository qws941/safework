name: ðŸ¤– Claude Code Assistant

# Prevent duplicate workflow execution
concurrency:
  group: claude-${{ github.ref }}-${{ github.event_name }}
  cancel-in-progress: true

on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  issues:
    types: [opened, assigned, labeled, edited]
  pull_request_review:
    types: [submitted]
  pull_request:
    types: [opened, synchronize, ready_for_review, reopened]
  workflow_run:
    workflows: ["ðŸš€ Deploy Pipeline"]
    types: [completed]
  workflow_dispatch:
    inputs:
      action_type:
        description: 'Claude action to perform'
        required: false
        default: 'analyze'
        type: choice
        options:
          - 'analyze'
          - 'auto-fix'
          - 'review'
          - 'issue-resolve'

permissions:
  contents: write
  issues: write
  pull-requests: write
  actions: write
  checks: write
  repository-projects: write
  security-events: write
  statuses: write
  deployments: write
  pages: write
  metadata: read

jobs:
  claude-assistant:
    name: ðŸ¤– AI Assistant
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    # Comprehensive trigger conditions for Claude AI assistant
    if: >
      github.event_name == 'workflow_run' ||
      github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'issues' && (github.event.action == 'opened' || github.event.action == 'edited')) ||
      (github.event_name == 'pull_request' && github.event.pull_request.draft == false) ||
      (github.event_name == 'pull_request_review' && github.event.review.state == 'changes_requested')
    
    steps:
      - name: ðŸ¤– Claude Code Action
        uses: anthropics/claude-code-action@v1
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
          track_progress: ${{ github.event_name != 'workflow_run' }}
          prompt: |
            ${{ 
              github.event_name == 'workflow_run' && 'SafeWork deployment workflow completed. Analyze results and create issues for any problems.' ||
              github.event_name == 'workflow_dispatch' && format('Manual Claude action requested: {0}. Perform comprehensive analysis and assistance.', inputs.action_type) ||
              github.event_name == 'pull_request' && 'Comprehensive SafeWork PR review: analyze code quality, security, performance, and testing. Provide detailed feedback.' ||
              github.event_name == 'issues' && 'SafeWork issue analysis: provide solutions, code fixes, and implementation guidance.' ||
              github.event_name == 'issue_comment' && 'Respond to SafeWork issue comment with technical assistance and solutions.' ||
              github.event_name == 'pull_request_review_comment' && 'Address PR review comment with code improvements and explanations.' ||
              'SafeWork AI Assistant: Industrial health & safety management system support with independent container deployment.'
            }}
            
            **Project Context:**
            - SafeWork: Industrial Health and Safety Management System (Flask 3.0+)
            - Tech Stack: Python Flask, PostgreSQL 15, Redis, Independent Docker Containers
            - Architecture: Fully independent containers (no docker-compose), Dockerfile-based configuration
            - Key Features: Survey system, MSDS management, safety education, health checkups
            - Deployment: Docker Registry (registry.jclee.me), Portainer API deployment
            - Security: GitHub Secrets for production, environment-based configuration
            - Ports: App:4545, PostgreSQL:4546, Redis:4547
            
            **Response Language:** Please respond in Korean for user communication.
          claude_args: |
            --temperature 0.1
            --allowedTools "mcp__serena__*,mcp__github__*,mcp__sequential-thinking__*,mcp__memory__*"
            --systemPrompt "SafeWork Flask application expert. Provides practical and secure solutions based on industrial health and safety domain knowledge and Flask/Python/MySQL/Docker technical expertise. Emphasizes code quality, security, and performance."