name: 🤖 Claude Code Assistant

on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  issues:
    types: [opened, assigned, labeled]
  pull_request_review:
    types: [submitted]
  pull_request:
    types: [opened, synchronize, ready_for_review, reopened]
  workflow_run:
    workflows: ["🚀 SafeWork Deployment Pipeline"]
    types: [completed]

permissions:
  contents: write
  issues: write
  pull-requests: write
  actions: read
  checks: read

jobs:
  claude-assistant:
    name: 🤖 AI Assistant
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    # Only run if comment contains @claude or for specific events
    if: >
      github.event_name == 'workflow_run' ||
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'issues' && github.event.action == 'opened') ||
      (github.event_name == 'pull_request' && github.event.pull_request.draft == false) ||
      (github.event_name == 'pull_request_review' && github.event.review.state == 'changes_requested')
    
    steps:
      - name: 🤖 Claude Code Action
        uses: anthropics/claude-code-action@v1
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
          track_progress: ${{ github.event_name != 'workflow_run' }}
          prompt: |
            ${{ 
              github.event_name == 'workflow_run' && 'SafeWork deployment workflow has completed. Please analyze deployment results and provide solutions if there are issues. Create GitHub issues if necessary.' ||
              github.event_name == 'pull_request' && 'Please comprehensively review the SafeWork Flask application Pull Request. Analyze from code quality, security, performance, and testing perspectives and suggest improvements.' ||
              github.event_name == 'issues' && 'Please analyze new issues in the SafeWork project. Provide problem-solving approaches and help with code modifications if needed.' ||
              'I will help with SafeWork project-related questions. Support industrial health and safety management system development with independent container deployment.'
            }}
            
            **Project Context:**
            - SafeWork: Industrial Health and Safety Management System (Flask 3.0+)
            - Tech Stack: Python Flask, MySQL 8.0, Redis, Independent Docker Containers
            - Architecture: Fully independent containers (no docker-compose), Dockerfile-based configuration
            - Key Features: Survey system, MSDS management, safety education, health checkups
            - Deployment: Docker Registry (registry.jclee.me), Watchtower auto-deployment
            - Security: GitHub Secrets for production, Dockerfile for defaults
            
            **Response Language:** Please respond in Korean for user communication.
          claude_args: |
            --temperature 0.1
            --allowedTools "mcp__serena__*,mcp__github__*,mcp__sequential-thinking__*,mcp__memory__*"
            --systemPrompt "SafeWork Flask 애플리케이션 전문가. 산업안전보건 도메인 지식과 Flask/Python/MySQL/Docker 기술 전문성을 바탕으로 실용적이고 안전한 솔루션을 제공합니다. 코드 품질, 보안, 성능을 중시합니다."