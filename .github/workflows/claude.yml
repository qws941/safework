name: Claude Code

on:
  issue_comment:
    types: [created]
  issues:
    types: [opened]
  pull_request:
    types: [opened, synchronize]
  pull_request_review:
    types: [submitted]

# 동시성 제어: 중복 실행 방지
concurrency:
  group: claude-${{ github.event.number || github.ref }}
  cancel-in-progress: true

jobs:
  claude:
    if: |
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'issues' && contains(github.event.issue.body, '@claude')) ||
      (github.event_name == 'pull_request_review' && contains(github.event.review.body, '@claude'))
    runs-on: ubuntu-latest
    timeout-minutes: 15  # 타임아웃 설정
    permissions:
      contents: write
      issues: write
      pull-requests: write
      actions: read
      id-token: write
    
    steps:
      - name: 🔍 워크플로우 트리거 분석
        run: |
          echo "🚀 Claude 워크플로우 시작!"
          echo "이벤트: ${{ github.event_name }}"
          echo "Actor: ${{ github.actor }}"
          echo "Repository: ${{ github.repository }}"
          echo ""
          
          if [ "${{ github.event_name }}" = "issue_comment" ]; then
            echo "💬 댓글 내용: ${{ github.event.comment.body }}"
            echo "이슈 번호: #${{ github.event.issue.number }}"
          elif [ "${{ github.event_name }}" = "issues" ]; then
            echo "📋 이슈 제목: ${{ github.event.issue.title }}"
            echo "이슈 내용: ${{ github.event.issue.body }}"
          fi
          
      - name: 📥 Repository Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🤖 Claude Code Action
        uses: anthropics/claude-code-action@v1
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
          claude_args: "--max-turns 5 --model claude-sonnet-4-20250514"
          prompt: |
            SafeWork 산업안전보건 관리시스템의 이슈를 분석하고 해결해 주세요.
            
            ## 📋 프로젝트 컨텍스트
            - Flask 3.0+ 기반 산업안전보건 관리시스템
            - MySQL 8.0 데이터베이스 사용
            - Bootstrap 4.6 + jQuery 프론트엔드
            - Docker 기반 배포 시스템
            
            ## 🎯 개발 가이드라인
            - **실제 코드 수정 필수** (분석만 하지 말고!)
            - Flask 3.0+ 패턴 및 모범사례 준수
            - MySQL 8.0 호환 쿼리 작성
            - KST 시간대 적용 (한국 사용자)
            - Bootstrap 4.6 UI 컴포넌트 사용
            - 변경사항 커밋 및 PR 생성 필수
            - 테스트 실행 및 검증
            
            ## ⚠️ 중요사항
            - 분석만 하지 말고 반드시 실제 파일을 수정하세요
            - 커밋 메시지는 한국어로 작성해 주세요
            - 작업 완료 후 이슈를 자동으로 닫아주세요

