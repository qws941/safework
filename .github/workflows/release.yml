name: Release Workflow

on:
  release:
    types: [published]

env:
  REGISTRY: ${{ secrets.REGISTRY_URL || 'registry.jclee.me' }}
  PROJECT: safework
  REGISTRY_USER: ${{ secrets.REGISTRY_USER || 'admin' }}
  REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}

jobs:
  release-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Get release version
      id: version
      run: |
        # GitHub Release 태그에서 버전 추출
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        echo "🎉 Release 배포: v$VERSION"
        
        # VERSION 파일 업데이트
        echo $VERSION > app/VERSION
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ env.REGISTRY_USER }}
        password: ${{ env.REGISTRY_PASSWORD }}
    
    - name: Build and push Release images
      uses: docker/build-push-action@v5
      with:
        context: ./app
        push: true
        tags: |
          ${{ env.REGISTRY }}/${{ env.PROJECT }}/app:latest
          ${{ env.REGISTRY }}/${{ env.PROJECT }}/app:v${{ steps.version.outputs.VERSION }}
          ${{ env.REGISTRY }}/${{ env.PROJECT }}/app:stable
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Update release notes
      uses: actions/github-script@v7
      with:
        script: |
          const version = '${{ steps.version.outputs.VERSION }}';
          const releaseBody = `
          ## 🚀 SafeWork v${version} 릴리즈
          
          ### 📦 Docker 이미지
          \`\`\`bash
          docker pull ${{ env.REGISTRY }}/${{ env.PROJECT }}/app:v${version}
          \`\`\`
          
          ### 🔄 업데이트 방법
          \`\`\`bash
          # 자동 업데이트
          make deploy
          
          # 또는 수동
          ./deploy.sh local
          \`\`\`
          
          ### 🌟 주요 기능
          - 📱 모바일 최적화
          - 📊 관리자 대시보드  
          - 🔄 자동 버전 관리
          - 🐳 Docker Compose 지원
          
          **빌드 시간**: ${new Date().toISOString()}
          `;
          
          await github.rest.repos.updateRelease({
            owner: context.repo.owner,
            repo: context.repo.repo,
            release_id: context.payload.release.id,
            body: releaseBody
          });
    
    - name: Deployment success
      run: |
        echo "🎉 SafeWork v${{ steps.version.outputs.VERSION }} 릴리즈 배포 완료!"
        echo "📦 이미지: ${{ env.REGISTRY }}/${{ env.PROJECT }}/app:v${{ steps.version.outputs.VERSION }}"
        echo "🏷️ Tags: latest, v${{ steps.version.outputs.VERSION }}, stable"