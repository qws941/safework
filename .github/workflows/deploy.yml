name: SafeWork CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

env:
  REGISTRY: registry.jclee.me
  PROJECT: safework
  REGISTRY_USER: admin
  REGISTRY_PASSWORD: bingogo1

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Log in to Docker Registry
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ env.REGISTRY_USER }}
        password: ${{ env.REGISTRY_PASSWORD }}
    
    - name: Get version
      id: version
      run: |
        echo "VERSION=$(date +%Y%m%d-%H%M%S)" >> $GITHUB_OUTPUT
        echo "SHA_SHORT=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT
    
    - name: Build and push App image
      uses: docker/build-push-action@v4
      with:
        context: ./app
        push: true
        tags: |
          ${{ env.REGISTRY }}/${{ env.PROJECT }}/app:latest
          ${{ env.REGISTRY }}/${{ env.PROJECT }}/app:${{ steps.version.outputs.VERSION }}
          ${{ env.REGISTRY }}/${{ env.PROJECT }}/app:${{ steps.version.outputs.SHA_SHORT }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Build and push MySQL image
      uses: docker/build-push-action@v4
      with:
        context: ./mysql
        push: true
        tags: |
          ${{ env.REGISTRY }}/${{ env.PROJECT }}/mysql:latest
          ${{ env.REGISTRY }}/${{ env.PROJECT }}/mysql:${{ steps.version.outputs.VERSION }}
          ${{ env.REGISTRY }}/${{ env.PROJECT }}/mysql:${{ steps.version.outputs.SHA_SHORT }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Build and push Redis image
      uses: docker/build-push-action@v4
      with:
        context: ./redis
        push: true
        tags: |
          ${{ env.REGISTRY }}/${{ env.PROJECT }}/redis:latest
          ${{ env.REGISTRY }}/${{ env.PROJECT }}/redis:${{ steps.version.outputs.VERSION }}
          ${{ env.REGISTRY }}/${{ env.PROJECT }}/redis:${{ steps.version.outputs.SHA_SHORT }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Create deployment info
      run: |
        cat > deployment-info.json <<EOF
        {
          "version": "${{ steps.version.outputs.VERSION }}",
          "sha": "${{ github.sha }}",
          "sha_short": "${{ steps.version.outputs.SHA_SHORT }}",
          "timestamp": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
          "images": {
            "app": "${{ env.REGISTRY }}/${{ env.PROJECT }}/app:${{ steps.version.outputs.VERSION }}",
            "mysql": "${{ env.REGISTRY }}/${{ env.PROJECT }}/mysql:${{ steps.version.outputs.VERSION }}",
            "redis": "${{ env.REGISTRY }}/${{ env.PROJECT }}/redis:${{ steps.version.outputs.VERSION }}"
          }
        }
        EOF
        cat deployment-info.json
    
    - name: Upload deployment info
      uses: actions/upload-artifact@v3
      with:
        name: deployment-info
        path: deployment-info.json
        retention-days: 30