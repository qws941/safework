version: '3.8'

# SafeWork Portainer GitOps Stack
# CI/CD Pipeline: Code → Local Test → Git Push → GitHub Actions (Build+Push) → Portainer GitOps Auto-Deploy
# GitOps: Portainer monitors this repository and auto-deploys on docker-compose.yml changes

networks:
  safework-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  app_uploads:
    driver: local

services:
  safework-postgres:
    image: registry.jclee.me/safework/postgres:latest
    container_name: safework-postgres
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    environment:
      - TZ=Asia/Seoul
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-safework2024}
      - POSTGRES_DB=${POSTGRES_DB:-safework_db}
      - POSTGRES_USER=${POSTGRES_USER:-safework}
      - PGDATA=/var/lib/postgresql/data/pgdata
    # ports: # Internal network only
      # - "4546:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - safework-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U safework -d safework_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  safework-redis:
    image: registry.jclee.me/safework/redis:latest
    container_name: safework-redis
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    environment:
      - TZ=Asia/Seoul
    # ports: # Internal network only
      # - "4547:6379"
    volumes:
      - redis_data:/data
    networks:
      - safework-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  safework-app:
    image: registry.jclee.me/safework/app:latest
    container_name: safework-app
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    environment:
      - TZ=Asia/Seoul
      - FLASK_ENV=${FLASK_ENV:-production}
      - DB_HOST=${DB_HOST:-safework-postgres}
      - DB_NAME=${POSTGRES_DB:-safework_db}
      - DB_USER=${POSTGRES_USER:-safework}
      - DB_PASSWORD=${POSTGRES_PASSWORD:-safework2024}
      - REDIS_HOST=${REDIS_HOST:-safework-redis}
      - SECRET_KEY=${SECRET_KEY:-safework-production-secret-key-2024}
      - ADMIN_USERNAME=${ADMIN_USERNAME:-admin}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-safework2024}
    ports:
      - "4545:4545"
    volumes:
      - app_uploads:/app/uploads
    networks:
      - safework-network
    depends_on:
      - safework-postgres
      - safework-redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4545/health"]
      interval: 30s
      timeout: 10s
      retries: 3